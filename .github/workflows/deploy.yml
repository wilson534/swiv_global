name: Deploy

on:
  push:
    branches: [main]
    tags:
      - 'v*'

jobs:
  deploy-api:
    name: Deploy API to Vercel
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./api
          vercel-args: '--prod'

  build-mobile-ios:
    name: Build iOS App
    runs-on: macos-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
      
      - name: Install dependencies
        working-directory: ./mobile
        run: npm install --legacy-peer-deps
      
      - name: Build iOS
        working-directory: ./mobile
        run: eas build --platform ios --profile production --non-interactive

  build-mobile-android:
    name: Build Android App
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
      
      - name: Install dependencies
        working-directory: ./mobile
        run: npm install --legacy-peer-deps
      
      - name: Build Android
        working-directory: ./mobile
        run: eas build --platform android --profile production --non-interactive

  notify:
    name: Notify Deployment
    runs-on: ubuntu-latest
    needs: [deploy-api]
    if: always()
    steps:
      - name: Send notification
        run: |
          echo "Deployment completed"
          # 这里可以集成 Slack/Discord 通知




